version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: go-auth-postgres
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - api-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  go-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-auth-api
    ports:
      - "8081:8081"
    environment:
      - GO_ENV=production
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8081
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=yourpassword
      - DB_DATABASE=auth_db
      - JWT_SECRET=your-production-secret-key-256-bits-long
      - LOG_LEVEL=info
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - api-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  api-network:
    driver: bridge

volumes:
  postgres_data: